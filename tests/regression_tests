# syntax of this file:
# lines starting with # (or empty) are comments
# regular lines are shell commands
# if a shell command is followed with lines starting '> '
# they contain output the preceding command must match

spy 1
spy --help
spy --show-fragments 0
spy -l 0
spy --each-line 0
spy --start 2 0
spy -s 2 0
spy --end 2 0
spy -e 2 0
spy spy
spy spy.catcher
spy 1+ 2+ 3
> 6
spy '1 + 2'
> 3
spy --prelude x=3 x
> 3
spy --prelude x=3 x+=1 x
> 4
spy -p x=3 x
> 3
spy --pipe-name=apple "'hello'" apple
> hello
echo 'x' | spy -l
> x
printf '1\n2\n3\n' | spy -c list
> ['1', '2', '3']
printf '1\n2\n3\n' | spy -rc list
> ['1\n', '2\n', '3\n']
printf '1\n2\n' | spy -l -c int 'pipe += 1'
> 2
> 3
printf '1\n2\n' | spy -l -ma x=3 -c int pipe+x
> 4
> 5
printf '5\n5\n' | spy -l -p x=3 -ma x+=3 -c int pipe+x
> 11
> 11
spy -m '[1,2,3]' -m '[4,5,6]'
> 4
> 5
> 6
> 4
> 5
> 6
> 4
> 5
> 6

# make sure 12345 is blamed
spy --callable 12345 2>&1 | grep 12345

spy -lf 0 < test.txt | wc -l
> 0

# things that should not work
! spy -c 0
! spy -m 0

# documented as equivalent
printf '10\n20\n' | spy -lc repr
> '10'
> '20'
printf '10\n20\n' | spy 'spy.many(pipe)' -c repr
> '10'
> '20'

printf '1\n2\n3\n4\n5' | spy 'pipe[2]'
> 3

# the examples from doc/examples
spy -mc sorted < test.txt
> file
> five
> has
> lines
> this
spy -mc reversed < test.txt
> lines
> five
> has
> file
> this
spy -l -f 'len(pipe) == 4' < test.txt
> this
> file
> five
spy -m "['{}: {}'.format(n, v) for n, v in enumerate(pipe, 1)]" < test.txt
> 1: this
> 2: file
> 3: has
> 4: five
> 5: lines
spy -m 'enumerate(pipe, 1)' "'{}: {}'.format(*pipe)" < test.txt
> 1: this
> 2: file
> 3: has
> 4: five
> 5: lines
spy -c csv.DictReader -c list -c json.dumps < test.csv

# error handling
! spy 3 -c None
> Traceback (most recent call last):
>   Fragment 2, in decorator spy.decorators.callable
>     --callable 'None'
>     input to fragment was 3
> TypeError: 'NoneType' object is not callable
! spy 3 idonotexist
> Traceback (most recent call last):
>   Fragment 2
>     idonotexist
>     input to fragment was 3
> NameError: name 'idonotexist' is not defined
